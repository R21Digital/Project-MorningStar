---
layout: base.njk
---

<style>
    .guide-container {
        display: flex;
        min-height: calc(100vh - 40px);
        background: white;
    }
    
    .guide-sidebar {
        width: 280px;
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        color: white;
        padding: 30px 25px;
        position: sticky;
        top: 0;
        height: 100vh;
        overflow-y: auto;
    }
    
    .guide-sidebar h3 {
        font-size: 1.2rem;
        margin-bottom: 20px;
        color: white;
        border-bottom: 2px solid rgba(255,255,255,0.3);
        padding-bottom: 10px;
    }
    
    .guide-toc {
        list-style: none;
        padding: 0;
        margin: 0;
    }
    
    .guide-toc li {
        margin-bottom: 8px;
    }
    
    .guide-toc a {
        color: rgba(255,255,255,0.9);
        text-decoration: none;
        display: block;
        padding: 8px 12px;
        border-radius: 6px;
        transition: all 0.3s ease;
        font-size: 0.9rem;
    }
    
    .guide-toc a:hover,
    .guide-toc a.active {
        background: rgba(255,255,255,0.2);
        color: white;
        transform: translateX(5px);
    }
    
    .guide-main {
        flex: 1;
        padding: 40px;
        max-width: calc(100% - 280px);
    }
    
    .guide-header {
        margin-bottom: 40px;
        padding-bottom: 20px;
        border-bottom: 3px solid #667eea;
    }
    
    .guide-title {
        font-size: 2.5rem;
        font-weight: 700;
        color: #333;
        margin-bottom: 15px;
    }
    
    .guide-meta {
        display: flex;
        flex-wrap: wrap;
        gap: 20px;
        margin-bottom: 15px;
        font-size: 0.9rem;
        color: #666;
    }
    
    .guide-meta-item {
        display: flex;
        align-items: center;
        gap: 5px;
    }
    
    .guide-meta-item i {
        color: #667eea;
    }
    
    .guide-tags {
        display: flex;
        flex-wrap: wrap;
        gap: 8px;
        margin-bottom: 15px;
    }
    
    .guide-tag {
        background: #667eea;
        color: white;
        padding: 4px 12px;
        border-radius: 15px;
        font-size: 0.8rem;
        font-weight: 500;
    }
    
    .guide-summary {
        background: #f8f9fa;
        padding: 20px;
        border-left: 4px solid #667eea;
        border-radius: 6px;
        font-style: italic;
        color: #555;
        margin-bottom: 30px;
    }
    
    .guide-content {
        line-height: 1.7;
        color: #333;
    }
    
    .guide-content h1,
    .guide-content h2 {
        color: #333;
        margin-top: 40px;
        margin-bottom: 20px;
        font-weight: 600;
        border-bottom: 2px solid #e9ecef;
        padding-bottom: 10px;
    }
    
    .guide-content h3 {
        color: #555;
        margin-top: 30px;
        margin-bottom: 15px;
        font-weight: 600;
    }
    
    .guide-content h4,
    .guide-content h5,
    .guide-content h6 {
        color: #666;
        margin-top: 25px;
        margin-bottom: 12px;
        font-weight: 600;
    }
    
    .guide-content p {
        margin-bottom: 20px;
    }
    
    .guide-content ul,
    .guide-content ol {
        margin-bottom: 20px;
        padding-left: 30px;
    }
    
    .guide-content li {
        margin-bottom: 8px;
    }
    
    .guide-content code {
        background: #f8f9fa;
        padding: 2px 6px;
        border-radius: 3px;
        font-family: 'Monaco', 'Menlo', 'Ubuntu Mono', monospace;
        font-size: 0.9em;
        color: #e83e8c;
    }
    
    .guide-content pre {
        background: #f8f9fa;
        padding: 20px;
        border-radius: 8px;
        overflow-x: auto;
        margin-bottom: 20px;
        border: 1px solid #e9ecef;
    }
    
    .guide-content blockquote {
        background: #f8f9fa;
        border-left: 4px solid #667eea;
        padding: 20px;
        margin: 20px 0;
        font-style: italic;
    }
    
    .guide-footer {
        margin-top: 60px;
        padding-top: 30px;
        border-top: 2px solid #e9ecef;
        background: #f8f9fa;
        padding: 30px;
        border-radius: 8px;
    }
    
    .guide-footer h4 {
        color: #333;
        margin-bottom: 15px;
        font-size: 1.1rem;
    }
    
    .guide-feedback {
        display: flex;
        gap: 15px;
        flex-wrap: wrap;
    }
    
    .guide-feedback-btn {
        background: #667eea;
        color: white;
        padding: 10px 20px;
        border: none;
        border-radius: 6px;
        text-decoration: none;
        display: inline-flex;
        align-items: center;
        gap: 8px;
        font-weight: 500;
        transition: all 0.3s ease;
    }
    
    .guide-feedback-btn:hover {
        background: #5a6fd8;
        color: white;
        transform: translateY(-2px);
        box-shadow: 0 4px 12px rgba(102, 126, 234, 0.3);
    }
    
    @media (max-width: 992px) {
        .guide-container {
            flex-direction: column;
        }
        
        .guide-sidebar {
            width: 100%;
            height: auto;
            position: relative;
        }
        
        .guide-main {
            max-width: 100%;
            padding: 30px 20px;
        }
        
        .guide-title {
            font-size: 2rem;
        }
        
        .guide-meta {
            flex-direction: column;
            gap: 10px;
        }
    }
</style>

<div class="guide-container">
    <aside class="guide-sidebar">
        <h3><i class="fas fa-list"></i> Table of Contents</h3>
        <nav class="guide-toc" id="guide-toc">
            <!-- Table of contents will be generated by JavaScript -->
        </nav>
    </aside>
    
    <main class="guide-main">
        <header class="guide-header">
            <h1 class="guide-title">{{ title }}</h1>
            
            <div class="guide-meta">
                {% if author %}
                <div class="guide-meta-item">
                    <i class="fas fa-user"></i>
                    <span>{{ author }}</span>
                </div>
                {% endif %}
                
                {% if createdAt %}
                <div class="guide-meta-item">
                    <i class="fas fa-calendar-plus"></i>
                    <span>Created: {{ createdAt | date: "%B %d, %Y" }}</span>
                </div>
                {% endif %}
                
                {% if updatedAt and updatedAt != createdAt %}
                <div class="guide-meta-item">
                    <i class="fas fa-calendar-edit"></i>
                    <span>Updated: {{ updatedAt | date: "%B %d, %Y" }}</span>
                </div>
                {% endif %}
            </div>
            
            {% if tags %}
            <div class="guide-tags">
                {% for tag in tags %}
                <span class="guide-tag">{{ tag }}</span>
                {% endfor %}
            </div>
            {% endif %}
            
            {% if summary %}
            <div class="guide-summary">
                {{ summary }}
            </div>
            {% endif %}
        </header>
        
        <article class="guide-content">
            {{ content | safe }}
        </article>
        
        <footer class="guide-footer">
            <h4><i class="fas fa-heart"></i> Found this guide helpful?</h4>
            <div class="guide-feedback">
                <a href="#" class="guide-feedback-btn">
                    <i class="fas fa-thumbs-up"></i>
                    Suggest a Build
                </a>
                <a href="#" class="guide-feedback-btn">
                    <i class="fas fa-comment"></i>
                    Give Feedback
                </a>
            </div>
        </footer>
    </main>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
    generateTableOfContents();
    initializeScrollSpy();
});

function generateTableOfContents() {
    const content = document.querySelector('.guide-content');
    const toc = document.getElementById('guide-toc');
    const headings = content.querySelectorAll('h1, h2, h3, h4, h5, h6');
    
    if (headings.length === 0) return;
    
    let tocHTML = '';
    headings.forEach((heading, index) => {
        const id = `heading-${index}`;
        heading.id = id;
        
        const level = parseInt(heading.tagName.substring(1));
        const indent = (level - 1) * 15;
        
        tocHTML += `
            <li style="padding-left: ${indent}px;">
                <a href="#${id}" class="toc-link" data-target="${id}">
                    ${heading.textContent}
                </a>
            </li>
        `;
    });
    
    toc.innerHTML = tocHTML;
}

function initializeScrollSpy() {
    const tocLinks = document.querySelectorAll('.toc-link');
    const headings = document.querySelectorAll('.guide-content h1, .guide-content h2, .guide-content h3, .guide-content h4, .guide-content h5, .guide-content h6');
    
    // Smooth scrolling for TOC links
    tocLinks.forEach(link => {
        link.addEventListener('click', function(e) {
            e.preventDefault();
            const targetId = this.getAttribute('data-target');
            const targetElement = document.getElementById(targetId);
            
            if (targetElement) {
                targetElement.scrollIntoView({
                    behavior: 'smooth',
                    block: 'start'
                });
            }
        });
    });
    
    // Update active link on scroll
    function updateActiveLink() {
        let activeHeading = null;
        
        headings.forEach(heading => {
            const rect = heading.getBoundingClientRect();
            if (rect.top <= 100) {
                activeHeading = heading.id;
            }
        });
        
        tocLinks.forEach(link => {
            link.classList.remove('active');
            if (link.getAttribute('data-target') === activeHeading) {
                link.classList.add('active');
            }
        });
    }
    
    window.addEventListener('scroll', updateActiveLink);
    updateActiveLink(); // Initial call
}
</script>