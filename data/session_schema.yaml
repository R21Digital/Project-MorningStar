# SWGDB Session Data Schema
# This file defines the structure and validation rules for session data

session_schema:
  type: object
  required:
    - session_id
    - character_name
    - start_time
    - end_time
    - duration_minutes
    - xp_data
    - credit_data
    - quest_data
    - location_data
    - event_data
    - performance_metrics
    - metadata
  properties:
    session_id:
      type: string
      description: "Unique identifier for the session"
      pattern: "^[a-zA-Z0-9_-]+$"
      minLength: 1
      maxLength: 50
    
    character_name:
      type: string
      description: "Name of the character for this session"
      minLength: 1
      maxLength: 50
    
    start_time:
      type: string
      description: "ISO 8601 timestamp when session started"
      format: date-time
    
    end_time:
      type: string
      description: "ISO 8601 timestamp when session ended"
      format: date-time
    
    duration_minutes:
      type: number
      description: "Session duration in minutes"
      minimum: 0
      maximum: 1440  # 24 hours
    
    xp_data:
      type: object
      required:
        - total_xp_gained
        - xp_per_hour
        - xp_events
        - profession_breakdown
        - skill_breakdown
        - source_breakdown
      properties:
        total_xp_gained:
          type: integer
          description: "Total XP gained during session"
          minimum: 0
        
        xp_per_hour:
          type: number
          description: "Average XP gained per hour"
          minimum: 0
        
        xp_events:
          type: array
          description: "List of individual XP gain events"
          items:
            type: object
            properties:
              timestamp:
                type: string
                format: date-time
              amount:
                type: integer
                minimum: 0
              profession:
                type: string
              skill:
                type: string
              source:
                type: string
                enum: ["combat", "quest", "crafting", "exploration", "social", "other"]
              quest_name:
                type: string
              zone:
                type: string
              level_before:
                type: integer
                minimum: 0
              level_after:
                type: integer
                minimum: 0
        
        profession_breakdown:
          type: object
          description: "XP breakdown by profession"
          additionalProperties:
            type: integer
            minimum: 0
        
        skill_breakdown:
          type: object
          description: "XP breakdown by skill"
          additionalProperties:
            type: integer
            minimum: 0
        
        source_breakdown:
          type: object
          description: "XP breakdown by source"
          additionalProperties:
            type: integer
            minimum: 0
        
        fastest_skills:
          type: array
          description: "List of fastest gaining skills"
          items:
            type: string
        
        slowdowns_detected:
          type: array
          description: "List of detected slowdowns"
          items:
            type: object
            properties:
              skill:
                type: string
              reason:
                type: string
              duration_minutes:
                type: number
    
    credit_data:
      type: object
      required:
        - total_credits_gained
        - credits_per_hour
        - credit_events
        - balance_history
      properties:
        total_credits_gained:
          type: integer
          description: "Total credits gained during session"
          minimum: 0
        
        credits_per_hour:
          type: number
          description: "Average credits gained per hour"
          minimum: 0
        
        credit_events:
          type: array
          description: "List of credit gain/loss events"
          items:
            type: object
            properties:
              timestamp:
                type: string
                format: date-time
              amount:
                type: integer
              source:
                type: string
                enum: ["quest", "vendor", "trade", "mission", "other"]
              balance_after:
                type: integer
              transaction_type:
                type: string
                enum: ["gain", "loss", "transfer"]
        
        balance_history:
          type: array
          description: "Credit balance over time"
          items:
            type: object
            properties:
              timestamp:
                type: string
                format: date-time
              balance:
                type: integer
    
    quest_data:
      type: object
      required:
        - total_quests_completed
        - quests_per_hour
        - quest_events
        - quest_types
        - reward_types
      properties:
        total_quests_completed:
          type: integer
          description: "Total number of quests completed"
          minimum: 0
        
        quests_per_hour:
          type: number
          description: "Average quests completed per hour"
          minimum: 0
        
        quest_events:
          type: array
          description: "List of completed quests"
          items:
            type: object
            properties:
              timestamp:
                type: string
                format: date-time
              quest_name:
                type: string
                minLength: 1
              quest_type:
                type: string
                enum: ["mission", "delivery", "hunt", "craft", "social", "other"]
              reward_type:
                type: string
                enum: ["xp", "credits", "items", "faction", "other"]
              reward_amount:
                type: integer
                minimum: 0
              zone:
                type: string
        
        quest_types:
          type: object
          description: "Breakdown of quests by type"
          additionalProperties:
            type: integer
            minimum: 0
        
        reward_types:
          type: object
          description: "Breakdown of quests by reward type"
          additionalProperties:
            type: integer
            minimum: 0
    
    location_data:
      type: object
      required:
        - total_locations_visited
        - unique_planets
        - unique_cities
        - location_events
        - travel_time_minutes
        - zone_efficiency
      properties:
        total_locations_visited:
          type: integer
          description: "Total number of locations visited"
          minimum: 0
        
        unique_planets:
          type: array
          description: "List of unique planets visited"
          items:
            type: string
        
        unique_cities:
          type: array
          description: "List of unique cities visited"
          items:
            type: string
        
        location_events:
          type: array
          description: "List of location visits"
          items:
            type: object
            properties:
              timestamp:
                type: string
                format: date-time
              planet:
                type: string
                minLength: 1
              city:
                type: string
                minLength: 1
              coordinates:
                type: array
                items:
                  type: integer
                minItems: 2
                maxItems: 2
              duration_minutes:
                type: number
                minimum: 0
              purpose:
                type: string
                enum: ["quest_hub", "combat_grinding", "crafting_hub", "travel", "other"]
        
        travel_time_minutes:
          type: number
          description: "Total time spent traveling"
          minimum: 0
        
        zone_efficiency:
          type: object
          description: "Efficiency metrics by zone"
          additionalProperties:
            type: number
            minimum: 0
    
    event_data:
      type: object
      required:
        - total_events
        - event_types
        - communication_events
        - player_encounters
        - guild_alerts
        - afk_periods
        - stuck_events
      properties:
        total_events:
          type: integer
          description: "Total number of events recorded"
          minimum: 0
        
        event_types:
          type: object
          description: "Breakdown of events by type"
          additionalProperties:
            type: integer
            minimum: 0
        
        communication_events:
          type: array
          description: "List of communication events (sanitized)"
          items:
            type: object
            properties:
              timestamp:
                type: string
                format: date-time
              event_type:
                type: string
                enum: ["whisper", "tell", "group_chat", "guild_chat", "other"]
              sender:
                type: string
              message:
                type: string
              response_sent:
                type: boolean
              _sanitized:
                type: boolean
        
        player_encounters:
          type: array
          description: "List of player encounters (sanitized)"
          items:
            type: object
            properties:
              timestamp:
                type: string
                format: date-time
              location:
                type: string
              distance:
                type: number
                minimum: 0
              interaction_type:
                type: string
                enum: ["detected", "whispered", "grouped", "other"]
              _player_name_removed:
                type: boolean
        
        guild_alerts:
          type: array
          description: "List of guild alerts (sanitized)"
          items:
            type: object
            properties:
              timestamp:
                type: string
                format: date-time
              sender:
                type: string
              message:
                type: string
              alert_type:
                type: string
                enum: ["guild_whisper", "leader_message", "officer_message", "other"]
              priority:
                type: string
                enum: ["high", "medium", "low"]
              auto_reply_sent:
                type: boolean
              reply_message:
                type: string
              _sanitized:
                type: boolean
        
        afk_periods:
          type: array
          description: "List of AFK periods"
          items:
            type: object
            properties:
              start_time:
                type: string
                format: date-time
              end_time:
                type: string
                format: date-time
              duration_minutes:
                type: number
                minimum: 0
              reason:
                type: string
        
        stuck_events:
          type: array
          description: "List of stuck events"
          items:
            type: object
            properties:
              timestamp:
                type: string
                format: date-time
              location:
                type: string
              reason:
                type: string
              duration_seconds:
                type: number
                minimum: 0
    
    performance_metrics:
      type: object
      required:
        - session_duration_minutes
        - total_actions
        - actions_per_hour
        - efficiency_score
      properties:
        session_duration_minutes:
          type: number
          description: "Session duration in minutes"
          minimum: 0
        
        total_actions:
          type: integer
          description: "Total number of actions performed"
          minimum: 0
        
        actions_per_hour:
          type: number
          description: "Average actions per hour"
          minimum: 0
        
        efficiency_score:
          type: number
          description: "Overall efficiency score"
          minimum: 0
        
        unique_locations_visited:
          type: integer
          description: "Number of unique locations visited"
          minimum: 0
        
        total_travel_time_minutes:
          type: number
          description: "Total time spent traveling"
          minimum: 0
        
        unique_players_encountered:
          type: integer
          description: "Number of unique players encountered"
          minimum: 0
        
        quests_completed:
          type: integer
          description: "Number of quests completed"
          minimum: 0
        
        afk_periods:
          type: integer
          description: "Number of AFK periods"
          minimum: 0
        
        stuck_events:
          type: integer
          description: "Number of stuck events"
          minimum: 0
    
    metadata:
      type: object
      required:
        - serialization_timestamp
        - serializer_version
        - data_source
        - original_session_keys
        - sanitization_applied
      properties:
        serialization_timestamp:
          type: string
          format: date-time
          description: "When the session was serialized"
        
        serializer_version:
          type: string
          description: "Version of the serializer used"
          pattern: "^\\d+\\.\\d+\\.\\d+$"
        
        data_source:
          type: string
          description: "Source of the session data"
          enum: ["ms11_bot", "manual_upload", "api_import"]
        
        original_session_keys:
          type: array
          description: "Original keys from the session data"
          items:
            type: string
        
        sanitization_applied:
          type: boolean
          description: "Whether data sanitization was applied"
        
        session_mode:
          type: string
          description: "Mode of the session"
          enum: ["quest", "combat", "crafting", "exploration", "social", "other"]
        
        character_name:
          type: string
          description: "Character name (if available)"
        
        serialization_error:
          type: boolean
          description: "Whether there was an error during serialization"
        
        error_message:
          type: string
          description: "Error message if serialization failed"

# Validation rules
validation_rules:
  session_id:
    - "Must be unique across all sessions"
    - "Must contain only alphanumeric characters, hyphens, and underscores"
    - "Must be between 1 and 50 characters"
  
  timestamps:
    - "All timestamps must be in ISO 8601 format"
    - "End time must be after start time"
    - "Duration must match the difference between start and end times"
  
  xp_data:
    - "Total XP gained must be non-negative"
    - "XP per hour must be calculated correctly"
    - "Profession breakdown must sum to total XP gained"
  
  credit_data:
    - "Total credits gained must be an integer"
    - "Credits per hour must be calculated correctly"
    - "Balance history must be consistent"
  
  quest_data:
    - "Total quests completed must match number of quest events"
    - "Quests per hour must be calculated correctly"
    - "Quest types must be valid enum values"
  
  location_data:
    - "Total locations visited must match number of location events"
    - "Unique planets and cities must be derived from location events"
    - "Travel time must be non-negative"
  
  event_data:
    - "Total events must match sum of all event types"
    - "Communication events must be sanitized"
    - "Player encounters must have player names removed"
    - "Guild alerts must be sanitized"
  
  performance_metrics:
    - "All metrics must be non-negative"
    - "Efficiency score must be calculated correctly"
    - "Actions per hour must be calculated correctly"

# Data sanitization rules
sanitization_rules:
  communication_events:
    - "Remove or sanitize whisper messages"
    - "Remove or sanitize tell messages"
    - "Remove or sanitize guild messages"
    - "Remove sensitive information like passwords, tokens, keys"
    - "Mark sanitized events with _sanitized flag"
  
  player_encounters:
    - "Remove player names for privacy"
    - "Keep location and interaction type"
    - "Mark with _player_name_removed flag"
  
  guild_alerts:
    - "Sanitize sensitive guild communications"
    - "Remove or sanitize private messages"
    - "Mark sanitized alerts with _sanitized flag"
  
  action_logs:
    - "Remove sensitive commands and actions"
    - "Sanitize any private information"
    - "Keep general action types for analysis"

# API response formats
api_formats:
  get_sessions:
    type: object
    properties:
      sessions:
        type: array
        items:
          $ref: "#/session_schema"
      total_count:
        type: integer
      page:
        type: integer
      limit:
        type: integer
  
  get_session:
    type: object
    properties:
      session:
        $ref: "#/session_schema"
  
  get_statistics:
    type: object
    properties:
      total_sessions:
        type: integer
      total_xp_gained:
        type: integer
      total_credits_gained:
        type: integer
      total_quests_completed:
        type: integer
      total_time_minutes:
        type: number
      average_session_duration:
        type: number
      average_xp_per_session:
        type: number
      average_credits_per_session:
        type: number
      total_stuck_events:
        type: integer
      total_communication_events:
        type: integer
      characters:
        type: array
        items:
          type: string
      planets:
        type: array
        items:
          type: string
      professions:
        type: array
        items:
          type: string

# Error responses
error_responses:
  authentication_error:
    type: object
    properties:
      error:
        type: string
        enum: ["Authentication required"]
      code:
        type: integer
        enum: [401]
  
  not_found_error:
    type: object
    properties:
      error:
        type: string
        enum: ["Session not found"]
      code:
        type: integer
        enum: [404]
  
  validation_error:
    type: object
    properties:
      error:
        type: string
        enum: ["Validation failed"]
      details:
        type: array
        items:
          type: object
          properties:
            field:
              type: string
            message:
              type: string
      code:
        type: integer
        enum: [400]
  
  server_error:
    type: object
    properties:
      error:
        type: string
        enum: ["Internal server error"]
      code:
        type: integer
        enum: [500] 